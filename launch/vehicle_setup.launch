<?xml version="1.0" ?>
<launch>

    <!-- Vehicle settings -->
<arg name="use_floating_sensor" default="true"/>

<arg name="Floating_sensor_model" default="$(find victim_localization)/urdf/floating_sensor/floating_sensor.sdf"/>
<arg name="iris_model" default="$(find victim_localization)/urdf/iris/iris_with_sensors.sdf" />
<arg name="iris_model_urdf" default="$(find victim_localization)/urdf/iris/iris_with_sensors.urdf" />
<arg name="transmitter_sdf" default="$(find victim_localization)/urdf/wireless/transmitter.sdf" />
<arg name="reciever_sdf" default="$(find victim_localization)/urdf/wireless/reciever.sdf" />


<arg name="world" default="$(find victim_localization)/world/twoRoomsSmallthreeT.world"/>
<arg name="headless" default="false"/>
<arg name="gui" default="true"/>
<arg name="debug" default="false"/>
<arg name="verbose" default="false"/>
<arg name="paused" default="false"/>

    <!-- Starting position -->
    <arg name="vehicle_starting_x" value="-2"/>
    <arg name="vehicle_starting_y" value="0"/>
    <arg name="vehicle_starting_z" value="1.0"/>
    <arg name="vehicle_starting_Y" value="0"/>


    <!-- Spawn Gazebo environment -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="headless" value="$(arg headless)"/>
        <arg name="gui" value="$(arg gui)"/>
        <arg name="world_name" value="$(arg world)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="verbose" value="$(arg verbose)" />
        <arg name="paused" value="$(arg paused)" />
    </include>

    <!-- Spawn Floating Sensor  -->
<group if="$(arg use_floating_sensor)">
    <include file="$(find victim_localization)/launch/spawn_vehicle_floating_sensor.launch">
      <arg name="model" value="$(arg Floating_sensor_model)"/>
      <arg name="vehicle_starting_x" value="$(arg vehicle_starting_x)"/>
      <arg name="vehicle_starting_y" value="$(arg vehicle_starting_y)"/>
      <arg name="vehicle_starting_z" value="$(arg vehicle_starting_z)"/>
      <arg name="vehicle_starting_Y" value="$(arg vehicle_starting_Y)"/>
    </include>
</group>

    <!-- Spawn iris vehicle and Firmware-->
<group unless="$(arg use_floating_sensor)">
    <include file="$(find victim_localization)/launch/spawn_vehicle_uav_with_Firmware.launch">
    <arg name="vehicle_starting_x" value="$(arg vehicle_starting_x)"/>
    <arg name="vehicle_starting_y" value="$(arg vehicle_starting_y)"/>
    <arg name="vehicle_starting_z" value="$(arg vehicle_starting_z)"/>
    <arg name="vehicle_starting_Y" value="$(arg vehicle_starting_Y)"/>
    <arg name="sdfRobot" value="$(arg iris_model)"/>
    <arg name="urdfRobot" value="$(arg iris_model_urdf)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="world" value="$(arg world)" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="verbose" value="$(arg verbose)" />
    <arg name="paused" value="$(arg paused)" />
    </include>
</group>


<!--
 <param name="transmitter/robot_description" textfile="$(arg transmitter_sdf)"/>

 <param name="reciever/robot_description" textfile="$(arg reciever_sdf)"/>

  <node name="spawn_transmitter" pkg="gazebo_ros" type="spawn_model"
   args="-param transmitter/robot_description
         -sdf
         -x -3
         -y -3
         -z 1
         -model transmitter"
   respawn="false" output="screen">
  </node>

  <node name="spawn_reciever" pkg="gazebo_ros" type="spawn_model"
   args="-param reciever/robot_description
         -sdf
         -x 3
         -y 3
         -z 1
         -model reciever"
   respawn="false" output="screen">
  </node>

-->
<node pkg="tf" type="static_transform_publisher" name="world_to_map" args="0 0 0 0 0 0 /world /map 500"/>


</launch>
